'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class StaffRecognition_Entities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=StaffRecognition_Entities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Certificate_Logging() As DbSet(Of Certificate_Logging)

    Public Overridable Function InsertCertificateLog(recipientName As String, recipientEmailAddress As String, recipientManagerEmailAddress As String, senderName As String, senderEmailAddress As String, certificateMessage As String, certificateDate As Nullable(Of Date), certificateType As String, emailSubject As String, emailBody As String, emailSent As Nullable(Of Boolean), executiveTeamConsideration As Nullable(Of Boolean), loggedOnUser As String, result As ObjectParameter, new_identity As ObjectParameter) As ObjectResult(Of Nullable(Of Integer))
        Dim recipientNameParameter As ObjectParameter = If(recipientName IsNot Nothing, New ObjectParameter("RecipientName", recipientName), New ObjectParameter("RecipientName", GetType(String)))

        Dim recipientEmailAddressParameter As ObjectParameter = If(recipientEmailAddress IsNot Nothing, New ObjectParameter("RecipientEmailAddress", recipientEmailAddress), New ObjectParameter("RecipientEmailAddress", GetType(String)))

        Dim recipientManagerEmailAddressParameter As ObjectParameter = If(recipientManagerEmailAddress IsNot Nothing, New ObjectParameter("RecipientManagerEmailAddress", recipientManagerEmailAddress), New ObjectParameter("RecipientManagerEmailAddress", GetType(String)))

        Dim senderNameParameter As ObjectParameter = If(senderName IsNot Nothing, New ObjectParameter("SenderName", senderName), New ObjectParameter("SenderName", GetType(String)))

        Dim senderEmailAddressParameter As ObjectParameter = If(senderEmailAddress IsNot Nothing, New ObjectParameter("SenderEmailAddress", senderEmailAddress), New ObjectParameter("SenderEmailAddress", GetType(String)))

        Dim certificateMessageParameter As ObjectParameter = If(certificateMessage IsNot Nothing, New ObjectParameter("CertificateMessage", certificateMessage), New ObjectParameter("CertificateMessage", GetType(String)))

        Dim certificateDateParameter As ObjectParameter = If(certificateDate.HasValue, New ObjectParameter("CertificateDate", certificateDate), New ObjectParameter("CertificateDate", GetType(Date)))

        Dim certificateTypeParameter As ObjectParameter = If(certificateType IsNot Nothing, New ObjectParameter("CertificateType", certificateType), New ObjectParameter("CertificateType", GetType(String)))

        Dim emailSubjectParameter As ObjectParameter = If(emailSubject IsNot Nothing, New ObjectParameter("EmailSubject", emailSubject), New ObjectParameter("EmailSubject", GetType(String)))

        Dim emailBodyParameter As ObjectParameter = If(emailBody IsNot Nothing, New ObjectParameter("EmailBody", emailBody), New ObjectParameter("EmailBody", GetType(String)))

        Dim emailSentParameter As ObjectParameter = If(emailSent.HasValue, New ObjectParameter("EmailSent", emailSent), New ObjectParameter("EmailSent", GetType(Boolean)))

        Dim executiveTeamConsiderationParameter As ObjectParameter = If(executiveTeamConsideration.HasValue, New ObjectParameter("ExecutiveTeamConsideration", executiveTeamConsideration), New ObjectParameter("ExecutiveTeamConsideration", GetType(Boolean)))

        Dim loggedOnUserParameter As ObjectParameter = If(loggedOnUser IsNot Nothing, New ObjectParameter("LoggedOnUser", loggedOnUser), New ObjectParameter("LoggedOnUser", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("InsertCertificateLog", recipientNameParameter, recipientEmailAddressParameter, recipientManagerEmailAddressParameter, senderNameParameter, senderEmailAddressParameter, certificateMessageParameter, certificateDateParameter, certificateTypeParameter, emailSubjectParameter, emailBodyParameter, emailSentParameter, executiveTeamConsiderationParameter, loggedOnUserParameter, result, new_identity)
    End Function

End Class
